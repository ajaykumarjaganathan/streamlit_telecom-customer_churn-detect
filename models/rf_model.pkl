import pickle
import os
import urllib.request
import streamlit as st
import joblib
import pandas as pd
from sklearn.preprocessing import StandardScaler

# Set up model paths
MODEL_DIR = os.path.join(os.path.dirname(__file__), "..", "models")
MODEL_URL = "https://github.com/ajaykumarjaganathan/streamlit_telecom-customer_churn-detect/raw/main/models/rf_model.pkl"
LOCAL_MODEL_PATH = os.path.join(MODEL_DIR, "rf_model.pkl")

def load_model():
    """Load the model with multiple fallback options"""
    try:
        # Create models directory if it doesn't exist
        os.makedirs(MODEL_DIR, exist_ok=True)
        
        # Option 1: Try local file first
        if os.path.exists(LOCAL_MODEL_PATH):
            return joblib.load(LOCAL_MODEL_PATH)
            
        # Option 2: Download from GitHub if local file not found
        st.warning("Model file not found locally. Downloading from GitHub...")
        urllib.request.urlretrieve(MODEL_URL, LOCAL_MODEL_PATH)
        return joblib.load(LOCAL_MODEL_PATH)
        
    except Exception as e:
        st.error(f"""
        **Model loading failed**: {str(e)}
        
        Please ensure:
        1. The model file exists at: {LOCAL_MODEL_PATH}
        2. You have internet connection to download from GitHub
        3. The GitHub URL is correct: {MODEL_URL}
        """)
        st.stop()  # Prevent further execution

def main():
    st.title("Customer Churn Prediction")
    
    # Load model with progress indicator
    with st.spinner("Loading prediction model..."):
        model = load_model()
    
    # Rest of your prediction code...
    st.success("Model loaded successfully!")
    
    # Add your input form and prediction logic here
    # Example:
    # input_data = get_user_input()
    # prediction = model.predict(input_data)

if __name__ == "__main__":
    main()
